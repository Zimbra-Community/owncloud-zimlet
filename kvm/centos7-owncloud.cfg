#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Install OS instead of upgrade
install
# Keyboard layouts
keyboard 'us'# Reboot after installation
reboot
# Root password
rootpw foobar
# System timezone
timezone Europe/Amsterdam
# Use network installation
url --url="http://mirror.cisp.com/CentOS/7/os/x86_64/"
repo --name=epel --baseurl=http://download.fedoraproject.org/pub/epel/7/x86_64/
# System language
lang en_US
# Firewall configuration
firewall --enabled --ssh
# Network information
network  --bootproto=dhcp --device=eth0
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use graphical install
graphical
firstboot --disable
# SELinux configuration
selinux --enforcing
# Do not configure the X Window System
skipx

# System bootloader configuration
bootloader --location=mbr
zerombr
clearpart --all --initlabel

# Disk partitioning information
part swap --asprimary --fstype="swap" --size=2200
part /boot --fstype=ext4 --size=500
part pv.01 --size=1 --grow
volgroup rootvg01 pv.01
logvol / --fstype ext4 --name=lv01 --vgname=rootvg01 --size=1 --grow

%packages
@base
@core
epel-release
chrony
nmap-ncat
perl-core
git
httpd
mod_ssl
php
php-pdo
php-mysql
php-gd
php-mbstring
php-xml
php-intl
php-mcrypt
php-smbclient
php-ldap
php-imap
php-pecl-apcu
apcu-panel
php-pecl-imagick
libreoffice
mariadb
mariadb-server
policycoreutils-python
%end

%post
cd /var/www/html
wget https://download.owncloud.org/community/owncloud-9.1.1.tar.bz2
rm -rf owncloud
tar jxvf owncloud-9.1.1.tar.bz2
chown -R apache owncloud
head -c12 /dev/urandom |base64 > /root/dbpass
echo "<?php" > owncloud/config/autoconfig.php
echo "\$AUTOCONFIG = array(" >> owncloud/config/autoconfig.php
echo '  "dbtype"        => "mysql",' >> owncloud/config/autoconfig.php 
echo '  "dbname"        => "owncloud",' >> owncloud/config/autoconfig.php 
echo '  "dbuser"        => "owncloud",' >> owncloud/config/autoconfig.php 
echo '  "dbpass"        => "'`cat /root/dbpass`'",' >> owncloud/config/autoconfig.php
echo '  "dbhost"        => "localhost",' >> owncloud/config/autoconfig.php
echo '  "dbtableprefix" => "",' >> owncloud/config/autoconfig.php
echo '  "directory"     => "/var/www/html/owncloud/data",' >> owncloud/config/autoconfig.php
echo ');' >> owncloud/config/autoconfig.php
systemctl enable httpd
systemctl enable mariadb
chmod +x /etc/rc.d/rc.local

cat > /var/www/html/owncloud/config/apcu.config.php << EOF
<?php
\$CONFIG = array (
"memcache.local"     => "\OC\Memcache\APC"
);
EOF

cat > /etc/httpd/conf.d/owncloud-ssl.conf << EOF
<VirtualHost _default_:443>
    SSLEngine on

    SSLProtocol all -SSLv2 -SSLv3
    SSLCipherSuite RC4-SHA:AES128-SHA:HIGH:MEDIUM:!aNULL:!MD5
    SSLHonorCipherOrder on

    SSLCertificateFile /etc/pki/tls/certs/localhost.crt
    SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
    
    Alias /owncloud "/var/www/html/owncloud/"

    <Directory "/var/www/html/owncloud">
        Options +FollowSymLinks
        AllowOverride All

        <IfModule mod_dav.c>
          Dav off
        </IfModule>

        SetEnv HOME /var/www/html/owncloud
        SetEnv HTTP_HOME /var/www/html/owncloud
    </Directory>

    <Directory "/var/www/html/owncloud/data/">
      # just in case if .htaccess gets disabled
      Require all denied
    </Directory>
</VirtualHost>
EOF

cat > /root/setpermissions.sh << EOF
#!/bin/bash

ocpath='/var/www/html/owncloud/'

if ! [ -d \$ocpath ]
then
	echo "/var/www/html/ not found, abort!"
	exit 0;
fi

htuser='apache'
htgroup='apache'

rootuser='root'

printf "Creating possible missing Directories\n"
mkdir -p \$ocpath/data
mkdir -p \$ocpath/assets
mkdir -p \$ocpath/updater

printf "chmod Files and Directories\n"
find \${ocpath}/ -type f -print0 | xargs -0 chmod 0640
find \${ocpath}/ -type d -print0 | xargs -0 chmod 0750

printf "chown Directories\n"
chown -R \${rootuser}:\${htgroup} \${ocpath}/
chown -R \${htuser}:\${htgroup} \${ocpath}/apps/
chown -R \${htuser}:\${htgroup} \${ocpath}/assets/
chown -R \${htuser}:\${htgroup} \${ocpath}/config/
chown -R \${htuser}:\${htgroup} \${ocpath}/data/
chown -R \${htuser}:\${htgroup} \${ocpath}/themes/
chown -R \${htuser}:\${htgroup} \${ocpath}/updater/

chmod +x \${ocpath}/occ

printf "chmod/chown .htaccess\n"
if [ -f \${ocpath}/.htaccess ]
 then
  chmod 0644 \${ocpath}/.htaccess
  chown \${rootuser}:\${htgroup} \${ocpath}/.htaccess
fi
if [ -f \${ocpath}/data/.htaccess ]
 then
  chmod 0644 \${ocpath}/data/.htaccess
  chown \${rootuser}:\${htgroup} \${ocpath}/data/.htaccess
fi

semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html/owncloud/data(/.*)?'
restorecon -R '/var/www/html/owncloud/data'
semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html/owncloud/config(/.*)?'
restorecon -R '/var/www/html/owncloud/config'
semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html/owncloud/apps(/.*)?'
restorecon -R '/var/www/html/owncloud/apps'
semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/html/owncloud(/.*)?'
restorecon -R '/var/www/html/owncloud/'

setsebool -P httpd_can_network_connect_db on

setsebool -P httpd_can_connect_ldap on

setsebool -P httpd_can_network_connect on

setsebool -P httpd_use_cifs on

setenforce 1
EOF
chmod +x /root/setpermissions.sh

cat > /root/bootstrap.sh << EOF
/root/setpermissions.sh
echo "create database owncloud;" > /root/bootstrap.sql
echo "grant all on owncloud.* to 'owncloud'@'localhost' identified by '`cat /root/dbpass`';" >> /root/bootstrap.sql
echo "flush privileges;" >> /root/bootstrap.sql
systemctl start mariadb
/usr/bin/mysql -uroot < /root/bootstrap.sql
/usr/bin/firewall-cmd --zone=public --add-port=443/tcp --permanent
/usr/bin/firewall-cmd --reload
echo "#!/bin/bash" > /etc/rc.local
echo "touch /var/lock/subsys/local" >> /etc/rc.local
chmod +x /etc/rc.d/rc.local
rm -f /root/bootstrap.sh
rm -f /root/bootstrap.sql
EOF
chmod +x /root/bootstrap.sh
echo /root/bootstrap.sh >> /etc/rc.local

cat > /etc/sysconfig/autofsck << EOF
AUTOFSCK_DEF_CHECK=yes
AUTOFSCK_TIMEOUT=4
PROMPT=yes
EOF
%end
